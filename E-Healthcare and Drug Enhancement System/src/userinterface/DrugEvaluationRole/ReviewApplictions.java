/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DrugEvaluationRole;

import Business.Disease.Disease;
import Business.Disease.DiseaseDirectory;
import Business.Drug.DrugVersions;
import Business.Drug.Drugs;
import Business.Enterprise.FDAEnterprise;
import Business.FDA.Organization.DrugEvaluationOrganization;
import Business.Network.Network;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DrugEvaluationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Pushkar
 */
public class ReviewApplictions extends javax.swing.JPanel {

    /**
     * Creates new form ReviewApplictions
     */
    JPanel userProcessContainer;
    UserAccount account;
    DrugEvaluationOrganization drugEvaluationOrganization;
    FDAEnterprise fdaEnterprise;
    Network network;
    DiseaseDirectory diseaseDirectory;

    public ReviewApplictions(JPanel userProcessContainer, UserAccount account, DrugEvaluationOrganization drugEvaluationOrganization, FDAEnterprise fdaEnterprise, Network network, DiseaseDirectory diseaseDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.drugEvaluationOrganization = drugEvaluationOrganization;
        this.fdaEnterprise = fdaEnterprise;
        this.diseaseDirectory = diseaseDirectory;
        this.network = network;

        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblApprovals = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnReview = new javax.swing.JButton();
        btnReview1 = new javax.swing.JButton();
        btnReview2 = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        btnReview3 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblApprovals.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Sender", "Reciever", "Drug", "Drug Version", "Disease", "Status", "Approval Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblApprovals);
        if (tblApprovals.getColumnModel().getColumnCount() > 0) {
            tblApprovals.getColumnModel().getColumn(0).setResizable(false);
            tblApprovals.getColumnModel().getColumn(1).setResizable(false);
            tblApprovals.getColumnModel().getColumn(2).setResizable(false);
            tblApprovals.getColumnModel().getColumn(3).setResizable(false);
            tblApprovals.getColumnModel().getColumn(4).setResizable(false);
            tblApprovals.getColumnModel().getColumn(5).setResizable(false);
            tblApprovals.getColumnModel().getColumn(6).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("REVIEW IND APPLICATIONS");

        btnReview.setText("Drug Study ");
        btnReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReviewActionPerformed(evt);
            }
        });

        btnReview1.setText("<<Back");
        btnReview1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReview1ActionPerformed(evt);
            }
        });

        btnReview2.setText("Assign to me");
        btnReview2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReview2ActionPerformed(evt);
            }
        });

        btnView.setText("View Drug Documentation");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnReview3.setText("Generate Trends");
        btnReview3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReview3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnReview1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnReview2, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReview3)
                        .addGap(281, 281, 281)
                        .addComponent(btnView)
                        .addGap(38, 38, 38)
                        .addComponent(btnReview, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(383, 383, 383)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(338, 338, 338))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReview)
                    .addComponent(btnReview1)
                    .addComponent(btnReview2)
                    .addComponent(btnView)
                    .addComponent(btnReview3))
                .addGap(314, 314, 314))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnReview2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReview2ActionPerformed
        int selected = tblApprovals.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            DrugEvaluationWorkRequest dwr = (DrugEvaluationWorkRequest) tblApprovals.getValueAt(selected, 2);
            dwr.setReceiver(account);
            dwr.setStatus("Pending");
            populateTable();
        }
    }//GEN-LAST:event_btnReview2ActionPerformed

    private void btnReview1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReview1ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_btnReview1ActionPerformed

    private void btnReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReviewActionPerformed
        int selected = tblApprovals.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Disease d = (Disease) tblApprovals.getValueAt(selected, 4);
            DrugEvaluationWorkRequest drw = (DrugEvaluationWorkRequest) tblApprovals.getValueAt(selected, 2);
            DrugStudy ds = new DrugStudy(userProcessContainer, fdaEnterprise, drugEvaluationOrganization, d, drw);
            userProcessContainer.add("AnalyseDrugData", ds);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnReviewActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        int selected = tblApprovals.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            Disease d = (Disease) tblApprovals.getValueAt(selected, 4);
            DrugEvaluationWorkRequest drw = (DrugEvaluationWorkRequest) tblApprovals.getValueAt(selected, 2);
            AnalyseDrugData add = new AnalyseDrugData(userProcessContainer, fdaEnterprise, drugEvaluationOrganization, d, drw);
            userProcessContainer.add("AnalyseDrugData", add);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnReview3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReview3ActionPerformed


        int selected = tblApprovals.getSelectedRow();

        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            DrugEvaluationWorkRequest dwr = (DrugEvaluationWorkRequest) tblApprovals.getValueAt(selected, 2);
            Drugs d = dwr.getDrug();
            DefaultCategoryDataset lineDataset = new DefaultCategoryDataset();
            for (DrugVersions drugVersions : d.getDrugHistory().getDrugVersions()) {
                lineDataset.setValue(drugVersions.getSuccessRate(), "SuccessRate", "Ver. " + drugVersions.getDrugNumber());
            }
            JFreeChart chart = ChartFactory.createLineChart("Line Chart", "DRUG VERSIONS", "SUCCESS RATE", lineDataset, PlotOrientation.VERTICAL, true, true, true);
            CategoryPlot lineplot = chart.getCategoryPlot();
            lineplot.setRangeGridlinePaint(Color.BLACK);
            ChartFrame frame = new ChartFrame("Trends in Drug Version SuccessRate", chart);
            frame.setVisible(true);
            frame.setSize(1024, 768);

        }
    }//GEN-LAST:event_btnReview3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReview;
    private javax.swing.JButton btnReview1;
    private javax.swing.JButton btnReview2;
    private javax.swing.JButton btnReview3;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblApprovals;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblApprovals.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : drugEvaluationOrganization.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[7];

            row[0] = request.getSender();

            row[1] = request.getReceiver();
            row[2] = ((DrugEvaluationWorkRequest) request);
            row[3] = ((DrugEvaluationWorkRequest) request).getDrugVersions();
            Disease dis = null;
            for (Disease d : diseaseDirectory.getDiseaseList()) {
                if (d.getName().equals(((DrugEvaluationWorkRequest) request).getDrug().getDisease())) {
                    dis = d;
                    break;
                }
            }
            row[4] = dis;
            row[5] = request.getStatus();
            row[6] = request.getStatus().equalsIgnoreCase("Completed") ? ((DrugEvaluationWorkRequest) request).getDrugVersions().isFdaApproved() ? "Yes" : "No" : "Under Review";
            dtm.addRow(row);
        }
    }
}
