/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ReceptionistRole;

import Business.Enterprise.HospitalEnterprise;
import Business.Hospital.Organization.NurseOrganization;
import Business.Hospital.Organization.ReceptionistOrganization;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Patient.PatientAppointmentDirectory;
import Business.Patient.PatientVisit;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PatientRegistrationWorkRequest;
import Business.WorkQueue.DocumentVitalsWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mihir
 */
public class ReceptionistWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ReceptionistWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    ReceptionistOrganization receptionistOrganization;
    HospitalEnterprise hospitalEnterprise;
    PatientAppointmentDirectory patientAppointment;

    public ReceptionistWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, ReceptionistOrganization receptionistOrganization, HospitalEnterprise hospitalEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.hospitalEnterprise = hospitalEnterprise;
        this.receptionistOrganization = receptionistOrganization;
        patientAppointment = hospitalEnterprise.getPatientAppointmentDirectory();
        populateTable();

    }

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblRequestSchedule.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : receptionistOrganization.getWorkQueue().getWorkRequestList()) {

            Object[] row = new Object[6];
            Patient p = (Patient) ((PatientRegistrationWorkRequest) request).getSender().getPerson();
            row[0] = ((PatientRegistrationWorkRequest) request);
            row[1] = p.getAge();
            row[2] = p.getGender();
            row[3] = request.getReceiver();
            row[4] = request.getStatus();
            row[5] = ((PatientRegistrationWorkRequest) request).getMessage();

            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        btnRegPatientApp = new javax.swing.JButton();
        btnViewAppSch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRequestSchedule = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        dateChooserApp = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 102, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Receptionist Work Area Panel");

        btnRegPatientApp.setText("Register Patient Appointment");
        btnRegPatientApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegPatientAppActionPerformed(evt);
            }
        });

        btnViewAppSch.setText("View Appointment Schedule");
        btnViewAppSch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAppSchActionPerformed(evt);
            }
        });

        tblRequestSchedule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Sender", "Age", "Gender", "Receiver", "Status", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRequestSchedule);
        if (tblRequestSchedule.getColumnModel().getColumnCount() > 0) {
            tblRequestSchedule.getColumnModel().getColumn(0).setResizable(false);
            tblRequestSchedule.getColumnModel().getColumn(1).setResizable(false);
            tblRequestSchedule.getColumnModel().getColumn(2).setResizable(false);
            tblRequestSchedule.getColumnModel().getColumn(3).setResizable(false);
            tblRequestSchedule.getColumnModel().getColumn(4).setResizable(false);
            tblRequestSchedule.getColumnModel().getColumn(5).setMinWidth(250);
            tblRequestSchedule.getColumnModel().getColumn(5).setMaxWidth(250);
        }

        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(272, 272, 272)
                            .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnViewAppSch)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(dateChooserApp, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRegPatientApp)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewAppSch)
                    .addComponent(btnAssign))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooserApp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRegPatientApp))
                .addGap(101, 101, 101))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegPatientAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegPatientAppActionPerformed
        int selected = tblRequestSchedule.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(null, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (dateChooserApp.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Please select a date.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            PatientVisit pv = new PatientVisit();

            pv.setAppointmentDate(dateChooserApp.getDate());

            PatientRegistrationWorkRequest prwr = (PatientRegistrationWorkRequest) tblRequestSchedule.getValueAt(selected, 0);
            Patient p = (Patient) prwr.getSender().getPerson();
            p.getPatientHistory().getPatientHistory().add(pv);
            patientAppointment.getPatientList().add(p);

            DocumentVitalsWorkRequest receptionistWorkRequest = new DocumentVitalsWorkRequest();

            receptionistWorkRequest.setSender(account);
            receptionistWorkRequest.setStatus("Sent");
            receptionistWorkRequest.setPatient(p);
            receptionistWorkRequest.setPatientVisit(pv);

            Organization organization = null;
            for (Organization org : hospitalEnterprise.getOrganizationDirectory().getOrganizationList()) {

                if (org instanceof NurseOrganization) {
                    organization = org;

                    break;
                }
            }

            organization.getWorkQueue().getWorkRequestList().add(receptionistWorkRequest);
            account.getWorkQueue().getWorkRequestList().add(receptionistWorkRequest);
        }
    }//GEN-LAST:event_btnRegPatientAppActionPerformed

    private void btnViewAppSchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAppSchActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnViewAppSchActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        int selected = tblRequestSchedule.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(null, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            PatientRegistrationWorkRequest request = (PatientRegistrationWorkRequest) tblRequestSchedule.getValueAt(selected, 0);
            request.setReceiver(account);
            request.setStatus("Pending");
            request.setMessage("Your request will be processed shortly");
            populateTable();
        }
    }//GEN-LAST:event_btnAssignActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnRegPatientApp;
    private javax.swing.JButton btnViewAppSch;
    private com.toedter.calendar.JDateChooser dateChooserApp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblRequestSchedule;
    // End of variables declaration//GEN-END:variables
}
