/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MassProductionRole;

import Business.DrugManufacturing.Organization.MassProductionOrganization;
import Business.DrugOrders.DrugItems;
import Business.DrugOrders.DrugOrders;
import Business.Enterprise.DrugManufacturingEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Hospital.Organization.LocalPharmacyOrganization;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PharmacyDrugRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.DrugTrialRole.ManageDrugTrial;

/**
 *
 * @author Mihir
 */
public class SupplyDrugsPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount account;
    MassProductionOrganization massProductionOrganization;
    DrugManufacturingEnterprise drugManufacturingEnterprise;
    Network network;

    /**
     * Creates new form SupplyDrugsPanel
     */
    public SupplyDrugsPanel(JPanel userProcessContainer, UserAccount account, MassProductionOrganization massProductionOrganization, DrugManufacturingEnterprise drugManufacturingEnterprise, Network network) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.massProductionOrganization = massProductionOrganization;
        this.drugManufacturingEnterprise = drugManufacturingEnterprise;
        this.network = network;
        populateOrderTable();
        btnSupply.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrugOrders = new javax.swing.JTable();
        btnView = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDrugItem = new javax.swing.JTable();
        btnSupply = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Supply Drugs");

        tblDrugOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Order No.", "Sender", "Receiver", "Status", "request"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDrugOrders.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblDrugOrders);
        if (tblDrugOrders.getColumnModel().getColumnCount() > 0) {
            tblDrugOrders.getColumnModel().getColumn(0).setResizable(false);
            tblDrugOrders.getColumnModel().getColumn(1).setResizable(false);
            tblDrugOrders.getColumnModel().getColumn(2).setResizable(false);
            tblDrugOrders.getColumnModel().getColumn(3).setResizable(false);
            tblDrugOrders.getColumnModel().getColumn(4).setMinWidth(0);
            tblDrugOrders.getColumnModel().getColumn(4).setPreferredWidth(0);
            tblDrugOrders.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        btnView.setText("View Order");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        tblDrugItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Drug Name", "Requested Quantity", "Available Quantity", "Price", "request"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDrugItem.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblDrugItem);
        if (tblDrugItem.getColumnModel().getColumnCount() > 0) {
            tblDrugItem.getColumnModel().getColumn(0).setResizable(false);
            tblDrugItem.getColumnModel().getColumn(1).setResizable(false);
            tblDrugItem.getColumnModel().getColumn(2).setResizable(false);
            tblDrugItem.getColumnModel().getColumn(3).setResizable(false);
            tblDrugItem.getColumnModel().getColumn(4).setMinWidth(0);
            tblDrugItem.getColumnModel().getColumn(4).setPreferredWidth(0);
            tblDrugItem.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        btnSupply.setText("Supply");
        btnSupply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupplyActionPerformed(evt);
            }
        });

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(378, 378, 378)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnView)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton1)
                                    .addGap(316, 316, 316)
                                    .addComponent(btnSupply))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(78, 78, 78))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(262, 262, 262))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(btnView)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSupply)
                    .addComponent(jButton1))
                .addGap(64, 64, 64))
        );
    }// </editor-fold>//GEN-END:initComponents

    public void populateOrderTable() {

        DefaultTableModel dtm = (DefaultTableModel) tblDrugOrders.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : massProductionOrganization.getWorkQueue().getWorkRequestList()) {

            if (request instanceof PharmacyDrugRequest) {

                Object[] row = new Object[5];

                row[0] = ((PharmacyDrugRequest) request).getDrugOrder();
                row[1] = request.getSender();
                row[2] = request.getReceiver();
                row[3] = request.getStatus();
                row[4] = (PharmacyDrugRequest) request;

                dtm.addRow(row);
            }
        }
    }

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblDrugOrders.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            DrugOrders d1 = (DrugOrders) tblDrugOrders.getValueAt(selectedRow, 0);
            PharmacyDrugRequest req = (PharmacyDrugRequest) tblDrugOrders.getValueAt(selectedRow, 4);
            DefaultTableModel dtm = (DefaultTableModel) tblDrugItem.getModel();
            dtm.setRowCount(0);
            for (DrugItems di : d1.getDrugOrderList()) {
                
                

                Object[] row = new Object[5];
                row[0] = di;
                row[1] = di.getRequestedQuantity();
                row[2] = di.getAvailableQuantity();
                row[3] = di.getSellingPrice();
                row[4] = (PharmacyDrugRequest)req;

                dtm.addRow(row);

            }

            btnSupply.setEnabled(true);

        }

    }//GEN-LAST:event_btnViewActionPerformed

    private void btnSupplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupplyActionPerformed
        // TODO add your handling code here:

        DefaultTableModel dtm = (DefaultTableModel) tblDrugItem.getModel();
        int rowCount = dtm.getRowCount();

        Organization organization = null;
        for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {

            if (ent instanceof HospitalEnterprise) {

                for (Organization org : ent.getOrganizationDirectory().getOrganizationList()) {
                    if (org instanceof LocalPharmacyOrganization) {
                        organization = org;
                        break;
                    }
                }
            }
            break;
        }
        
        PharmacyDrugRequest pdr = (PharmacyDrugRequest) tblDrugItem.getValueAt(0, 4);
        int index=0;
        for(WorkRequest wr : massProductionOrganization.getWorkQueue().getWorkRequestList()) {
            
            if(wr instanceof PharmacyDrugRequest) {
            if(wr == pdr) {
                index = massProductionOrganization.getWorkQueue().getWorkRequestList().indexOf(wr);
                break;
            }
            }
        }
        
        massProductionOrganization.getWorkQueue().getWorkRequestList().remove(index);
        populateOrderTable();
        
        for (int i = 0; i < rowCount; i++) {
            DrugItems di = (DrugItems) tblDrugItem.getValueAt(i, 0);
            ((LocalPharmacyOrganization) organization).getPharmacyInventory().getPharmacyDrugInventory().add(di);

        }
        JOptionPane.showMessageDialog(this, "Order placed successfully", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
        resetItemsTable();


    }//GEN-LAST:event_btnSupplyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    public void resetItemsTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblDrugItem.getModel();
        dtm.setRowCount(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSupply;
    private javax.swing.JButton btnView;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDrugItem;
    private javax.swing.JTable tblDrugOrders;
    // End of variables declaration//GEN-END:variables
}
