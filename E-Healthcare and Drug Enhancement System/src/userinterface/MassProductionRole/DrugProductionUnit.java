/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.MassProductionRole;

import Business.Disease.Disease;
import Business.Disease.DiseaseDirectory;
import Business.Drug.Drugs;
import Business.DrugManufacturing.Organization.MassProductionOrganization;
import Business.DrugOrders.DrugItems;
import Business.Enterprise.DrugManufacturingEnterprise;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.MassProductionWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Mihir
 */
public class DrugProductionUnit extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount account;
    MassProductionOrganization massProductionOrganization;
    DrugManufacturingEnterprise drugManufacturingEnterprise;
    DiseaseDirectory diseaseDirectory;

    /**
     * Creates new form DrugProductionUnit
     */
    public DrugProductionUnit(JPanel userProcessContainer, UserAccount account, MassProductionOrganization massProductionOrganization, DrugManufacturingEnterprise drugManufacturingEnterprise, DiseaseDirectory diseaseDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.massProductionOrganization = massProductionOrganization;
        this.drugManufacturingEnterprise = drugManufacturingEnterprise;
        this.diseaseDirectory = diseaseDirectory;
        populateCombo();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMass = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAvail = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMPRp = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnView = new javax.swing.JButton();
        cmbGen = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(255, 255, 255));

        jButton3.setText("<<Back");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Assign to me");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tblMass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender", "Reciever", "Drug", "M.R.P", "Quantity", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMass.getTableHeader().setReorderingAllowed(false);
        tblMass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMassMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMass);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MASS PRODUCTOIN WORK AREA");

        jLabel2.setText(" Avaiable Quantity");

        jLabel3.setText("M.R.P");

        jButton1.setText("Produce");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnView.setText("Generate");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(287, 287, 287)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton3)
                                        .addGap(134, 134, 134)
                                        .addComponent(cmbGen, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnView))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(28, 28, 28)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtMPRp, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(44, 44, 44)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(502, 502, 502)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtMPRp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton1)
                    .addComponent(btnView)
                    .addComponent(cmbGen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(135, 135, 135))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int selected = tblMass.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            MassProductionWorkRequest mpw = (MassProductionWorkRequest) tblMass.getValueAt(selected, 2);
            mpw.setReceiver(account);
            mpw.setStatus("Pending");
            populateCombo();
            populateTable();
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void tblMassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMassMouseClicked
        // TODO add your handling code here:

        int index = tblMass.getSelectedRow();
        MassProductionWorkRequest mpw = (MassProductionWorkRequest) tblMass.getValueAt(index, 2);
        if (mpw.getDrugItems().getAvailableQuantity() == 0 && mpw.getDrugItems().getMrp() == 0) {
            enableFields();
        } else {
            disableFields();
        }
    }//GEN-LAST:event_tblMassMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selected = tblMass.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else if (txtAvail.getText().equals("") || txtMPRp.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Please enter Available Quantity and M.R.P.", "Warning", JOptionPane.WARNING_MESSAGE);

        } else {
            MassProductionWorkRequest mp = (MassProductionWorkRequest) tblMass.getValueAt(selected, 2);
            DrugItems di = mp.getDrugItems();
            di.setAvailableQuantity(Integer.parseInt(txtAvail.getText()));
            di.setMrp(Integer.parseInt(txtMPRp.getText()));
            di.setSellingPrice();
            massProductionOrganization.getApprovedDrugsDirectory().getApprovedDrugs().add(di);
            mp.setStatus("Completed");
            mp.setReceiver(account);
            attachDrugWithDisease(di);
            disableFields();
            populateTable();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void attachDrugWithDisease(DrugItems di) {

        for (Disease disease : diseaseDirectory.getDiseaseList()) {

            if (disease.getName() == di.getDrug().getDisease()) {
                disease.getDrugList().add(di.getDrug().getName());
                break;
            }
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        int selected = tblMass.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(this, "Select a row.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            enableFields();

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        DefaultPieDataset dps = new DefaultPieDataset();
        if (cmbGen.getSelectedItem().equals("Select")) {
            JOptionPane.showMessageDialog(this, "Please select a value.", "Warning", JOptionPane.ERROR_MESSAGE);
        } else if (cmbGen.getSelectedItem().equals("By Sales Volume")) {
            for (DrugItems di : massProductionOrganization.getApprovedDrugsDirectory().getApprovedDrugs()) {
                dps.setValue(di.getDrug().getName() + " " + di.getDrug().getNumber(), di.getRequestedQuantity());
            }
            JFreeChart chart = ChartFactory.createPieChart("PieChart for Drugs", dps, true, true, true);
            PiePlot p = (PiePlot) chart.getPlot();
            // p.setForegroundAlpha(TOP_ALIGNMENT);
            ChartFrame cf = new ChartFrame("Pie Chart", chart);
            cf.setVisible(true);
            cf.setSize(500, 550);
        } else if (cmbGen.getSelectedItem().equals("By Sales Cost")) {
            for (DrugItems di : massProductionOrganization.getApprovedDrugsDirectory().getApprovedDrugs()) {
                dps.setValue(di.getDrug().getName() + " " + di.getDrug().getNumber(), di.getSellingPrice());
            }
            JFreeChart chart = ChartFactory.createPieChart("PieChart for Drugs", dps, true, true, true);
            PiePlot p = (PiePlot) chart.getPlot();
            // p.setForegroundAlpha(TOP_ALIGNMENT);
            ChartFrame cf = new ChartFrame("Pie Chart", chart);
            cf.setVisible(true);
            cf.setSize(500, 550);
        }


    }//GEN-LAST:event_btnViewActionPerformed

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblMass.getModel();

        dtm.setRowCount(0);
        for (WorkRequest request : massProductionOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof MassProductionWorkRequest) {
                Object row[] = new Object[6];
                row[0] = request.getSender();
                row[1] = request.getReceiver();
                row[2] = ((MassProductionWorkRequest) request);
                row[3] = ((MassProductionWorkRequest) request).getDrugItems().getMrp();
                row[4] = ((MassProductionWorkRequest) request).getDrugItems().getAvailableQuantity();
                row[5] = request.getStatus();

                dtm.addRow(row);
            }
        }
    }

    private void enableFields() {
        txtAvail.setEnabled(true);
        txtMPRp.setEnabled(true);
    }

    private void disableFields() {
        txtAvail.setEnabled(false);
        txtMPRp.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cmbGen;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMass;
    private javax.swing.JTextField txtAvail;
    private javax.swing.JTextField txtMPRp;
    // End of variables declaration//GEN-END:variables
public void populateCombo() {
        cmbGen.removeAllItems();
        cmbGen.addItem("Select");
        cmbGen.addItem("By Sales Volume");
        cmbGen.addItem("By Sales Cost");
    }
}
