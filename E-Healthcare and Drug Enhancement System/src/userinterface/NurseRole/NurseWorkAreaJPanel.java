/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.NurseRole;

import Business.Enterprise.HospitalEnterprise;
import Business.Hospital.Organization.NurseOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DocumentVitalsWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mihir
 */
public class NurseWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form NurseWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    NurseOrganization nurseOrganization;
    HospitalEnterprise hospitalEnterprise;

    public NurseWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, NurseOrganization nurseOrganization, HospitalEnterprise hospitalEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.hospitalEnterprise = hospitalEnterprise;
        this.nurseOrganization = nurseOrganization;

        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNurseWorkArea = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        btnDocumentVitals = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(102, 102, 102));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Nurse Work Area Panel");

        tblNurseWorkArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Sender", "Patient name", "Status", "Receiver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblNurseWorkArea);
        if (tblNurseWorkArea.getColumnModel().getColumnCount() > 0) {
            tblNurseWorkArea.getColumnModel().getColumn(0).setResizable(false);
            tblNurseWorkArea.getColumnModel().getColumn(1).setResizable(false);
            tblNurseWorkArea.getColumnModel().getColumn(2).setResizable(false);
            tblNurseWorkArea.getColumnModel().getColumn(3).setResizable(false);
        }

        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnDocumentVitals.setText("Document Vitals");
        btnDocumentVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDocumentVitalsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(125, 125, 125))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnDocumentVitals)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAssign))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssign)
                    .addComponent(btnDocumentVitals))
                .addGap(274, 274, 274))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:

        int selected = tblNurseWorkArea.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(null, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            DocumentVitalsWorkRequest request = (DocumentVitalsWorkRequest) tblNurseWorkArea.getValueAt(selected, 0);
            request.setReceiver(account);
            request.setStatus("Pending");

            populateTable();
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnDocumentVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDocumentVitalsActionPerformed
        // TODO add your handling code here:
        int selected = tblNurseWorkArea.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(null, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            DocumentVitalsWorkRequest rwr = (DocumentVitalsWorkRequest) tblNurseWorkArea.getValueAt(selected, 0);
            PatientEvaluation pe = new PatientEvaluation(userProcessContainer, rwr, account, hospitalEnterprise);
            userProcessContainer.add("PatientEvaluation", pe);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnDocumentVitalsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnDocumentVitals;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblNurseWorkArea;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblNurseWorkArea.getModel();
        dtm.setRowCount(0);

        for (WorkRequest request : nurseOrganization.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];

            row[0] = ((DocumentVitalsWorkRequest) request);
            row[1] = ((DocumentVitalsWorkRequest) request).getPatient();
            row[2] = ((DocumentVitalsWorkRequest) request).getStatus();
            row[3] = request.getReceiver();

            dtm.addRow(row);
        }
    }
}
