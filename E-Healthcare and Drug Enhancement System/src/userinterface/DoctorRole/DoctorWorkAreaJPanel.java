/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.Disease.DiseaseDirectory;
import Business.Drug.ApprovedDrugsDirectory;
import Business.Drug.Drugs;
import Business.Enterprise.HospitalEnterprise;
import Business.Hospital.Organization.DoctorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DiseaseEvaluationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mihir
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount account;
    DoctorOrganization doctorOrganization;
    HospitalEnterprise hospitalEnterprise;
    DiseaseDirectory diseaseDirectory;
    ApprovedDrugsDirectory approvedDrugsDirectory;

    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization doctorOrganization, HospitalEnterprise hospitalEnterprise, DiseaseDirectory diseaseDirectory, ApprovedDrugsDirectory approvedDrugsDirectory) {
        initComponents();
        this.diseaseDirectory = diseaseDirectory;
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.doctorOrganization = doctorOrganization;
        this.hospitalEnterprise = hospitalEnterprise;
        this.approvedDrugsDirectory = approvedDrugsDirectory;

        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblEvaluation = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnDiagnoe = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        tblEvaluation.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Sender", "Patient Name", "Symptoms", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEvaluation);
        if (tblEvaluation.getColumnModel().getColumnCount() > 0) {
            tblEvaluation.getColumnModel().getColumn(0).setResizable(false);
            tblEvaluation.getColumnModel().getColumn(1).setResizable(false);
            tblEvaluation.getColumnModel().getColumn(2).setMinWidth(250);
            tblEvaluation.getColumnModel().getColumn(2).setMaxWidth(250);
            tblEvaluation.getColumnModel().getColumn(3).setResizable(false);
            tblEvaluation.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Doctor Work Area");

        btnDiagnoe.setText("Perform Diagnosis");
        btnDiagnoe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiagnoeActionPerformed(evt);
            }
        });

        btnBack.setText("<<Back");

        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(192, 192, 192)
                        .addComponent(jLabel1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addGap(209, 209, 209)
                        .addComponent(btnAssign)
                        .addGap(58, 58, 58)
                        .addComponent(btnDiagnoe)))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnAssign)
                    .addComponent(btnDiagnoe))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
       int selected = tblEvaluation.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(null, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            DiseaseEvaluationWorkRequest request = (DiseaseEvaluationWorkRequest) tblEvaluation.getValueAt(selected,1);
            request.setReceiver(account);
            request.setStatus("Pending");

            populateTable();
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnDiagnoeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDiagnoeActionPerformed
    
         int selected = tblEvaluation.getSelectedRow();
        if (selected < 0) {
            JOptionPane.showMessageDialog(null, "Select a row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            DiseaseEvaluationWorkRequest dew = (DiseaseEvaluationWorkRequest) tblEvaluation.getValueAt(selected, 1);
            DoctorTreatmentAreaPanel dta = new DoctorTreatmentAreaPanel(userProcessContainer,account, dew, hospitalEnterprise,diseaseDirectory,approvedDrugsDirectory);
            userProcessContainer.add("PatientEvaluation", dta);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
    }//GEN-LAST:event_btnDiagnoeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDiagnoe;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblEvaluation;
    // End of variables declaration//GEN-END:variables

    public void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) tblEvaluation.getModel();
        dtm.setRowCount(0);
        for (WorkRequest request : doctorOrganization.getWorkQueue().getWorkRequestList()) {
            Object row[] = new Object[5];

            row[0] = request.getSender();
            row[1] = ((DiseaseEvaluationWorkRequest) request);
            row[2] = ((DiseaseEvaluationWorkRequest) request).getPatientVisit().getSymptoms();
            row[3] = request.getReceiver();
            row[4] = request.getStatus();

            dtm.addRow(row);
        }
    }
}
